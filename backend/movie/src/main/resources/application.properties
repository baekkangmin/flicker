spring.application.name=movie
server.port=80

# ✅ MongoDB
spring.data.mongodb.uri=mongodb://mongodb.flicker.svc.cluster.local:27017/flicker

# ✅ Redis
spring.data.redis.host=redis-master.flicker.svc.cluster.local
spring.data.redis.port=6379

# ✅ MySQL (데이터 DB 기준)
spring.datasource.url=jdbc:mysql://data-db.flicker.svc.cluster.local:3306/moviedb?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
spring.datasource.username=flicker
spring.datasource.password=6636
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ✅ JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.open-in-view=true

# ✅ Kafka
spring.kafka.bootstrap-servers=kafka.flicker.svc.cluster.local:9092
spring.kafka.consumer.group-id=movie-service
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-records=1000

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# ✅ Kafka Topic 정보
spring.kafka.template.movie-info-topic=movie-info
spring.kafka.template.movie-rating-topic=movie-rating
spring.kafka.template.wordcloud-result-topic=wordcloud-result
spring.kafka.template.alarm-movie-topic=alarm-movie
spring.kafka.template.wordcloud-review-topic=wordcloud-review
spring.kafka.template.new-movie-topic=new-movie

# ✅ Zipkin
spring.zipkin.sender.type=kafka
spring.zipkin.kafka.bootstrap-servers=kafka.flicker.svc.cluster.local:9092

# ✅ UTF-8 인코딩
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# ✅ 타임존
spring.jackson.time-zone=Asia/Seoul

